!function(e,t){"object"===typeof exports&&"object"===typeof module?module.exports=t():"function"===typeof define&&define.amd?define("vElevation",[],t):"object"===typeof exports?exports.vElevation=t():e.vElevation=t()}("undefined"!==typeof self?self:this,(function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="https://v8.material.balmjs.com/",n(n.s="zE8r")}({IFD9:function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(o){"object"===typeof window&&(n=window)}e.exports=n},g8md:function(e,t,n){"use strict";(function(e){t.a=function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"default",o=null;"undefined"!==typeof window?o=window.Vue:"undefined"!==typeof e&&(o=e.Vue),o&&("directive"===n?o.directive(t.name,t):o.use(t))}}).call(this,n("IFD9"))},zE8r:function(e,t,n){"use strict";n.r(t);var o=n("g8md");const r={MIN:0,MAX:24},i={transition:"mdc-elevation-transition",overlay:"mdc-elevation-overlay"},a=e=>{let t="";return e>=r.MIN&&e<=r.MAX?t=`mdc-elevation--z${e}`:console.warn("[v-shadow]","The elevation values are mapped out in a 'z-space' and range from 0 to 24"),t},u=(e,t,n)=>{let{value:o,modifiers:r}=n,u=[];if(r.transition)if(Array.isArray(o)&&2===o.length){let n=a(o[0]),r=a(o[1]);u.push(n),u.push(i.transition),t[`${e}EventListener`]("mouseenter",(()=>{t.classList.add(r)})),t[`${e}EventListener`]("mouseleave",(()=>{t.classList.remove(r)}))}else console.warn("[v-shadow]","Invalid elevation value");else u.push(a(o));if(t.classList[e](...u),r.overlay){const e=document.createElement("div");e.className=i.overlay,t.insertBefore(e,t.firstChild)}},l={name:"shadow",bind(e,t){u("add",e,t)},unbind(e,t){u("remove",e,t)}};Object(o.a)(l,"directive"),t.default=l}}).default}));